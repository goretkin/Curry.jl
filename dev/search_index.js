var documenterSearchIndex = {"docs":
[{"location":"#Curry.jl-1","page":"Home","title":"Curry.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Documentation for Curry.jl","category":"page"},{"location":"#","page":"Home","title":"Home","text":"CurrentModule = Curry\nDocTestSetup = quote\n    using Curry\nend","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [Curry]\nOrder   = [:function, :type]","category":"page"},{"location":"#Curry.Bind","page":"Home","title":"Curry.Bind","text":"Represent a function call, with partially bound arguments.\n\n\n\n\n\n","category":"type"},{"location":"#Curry.bind-Tuple{Any,Vararg{Any,N} where N}","page":"Home","title":"Curry.bind","text":"`bind(f, a, b)`\n`bind(f, args...; kw...)`\n\nThe bind function partially evaluates f by binding some of its arguments. Positional arguments of f that should not be bound are indicated by passing nothing to bind at the respective position.\n\njulia> using Curry: bind\n\njulia> b = bind(+, 1, 2); # no nothing, all arguments bound\n\njulia> b()\n3\n\njulia> b = bind(*, \"hello\", nothing); # only first argument bound\n\njulia> b(\", world\")\n\"hello, world\"\n\njulia> b = bind(=>, nothing, 1); # second argument bound\n\njulia> b(\"one\")\n\"one\" => 1\n\njulia> b = bind(isapprox, nothing, nothing, atol=100); # only atol keyword bound\n\njulia> b(10, 20)\ntrue\n\njulia> b(10, 20, atol=1) # keywords can be reassigned on the fly\nfalse\n\n\n\n\n\n","category":"method"},{"location":"#Curry.interleave-Tuple{Any,Any}","page":"Home","title":"Curry.interleave","text":"Return a Tuple that interleaves args into the nothing slots of slots.\n\nusing Curry\nCurry.interleave((:a, nothing, :c, nothing), (12, 34))\n\n# output\n\n(:a, 12, :c, 34)\n\nUse Some to escape nothing\n\nusing Curry\nCurry.interleave((:a, Some(nothing), :c, nothing), (34,))\n\n# output\n\n(:a, nothing, :c, 34)\n\n\n\n\n\n","category":"method"}]
}
